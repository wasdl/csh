python ---> 알고리즘

sw 역량테스트 im형 취득 ---> a형 준비

3.9 ---> IDE인 pycharm 버전

웹 프레임워크 백엔드 django ---> python 기반

======================================

git 설치

1. git(로컬저장소) --- github, gitlab(원격저장소)

2. bash를 쓰려고

Interface(2종류) --- 리모컨
1. GUI(graphic user interface)

2. TUI(Text User Interface)
그런데 TUI라는 말 보다는
Command Line Interface --- CLI

GUI : Windows GUI
CLI : cmd ---> 윈도우 기반, powershell, bash ---> 리눅스 기반

왜 개발자들은 bash를 더 많이 쓸까?

bash는 위, 아래 방향키로 전에 입력했던 명령어들 재사용
bash는 tab키를 이용해서 자동완성

: 간편한 명령어, 편리한 개발환경

============================================

IDE : 통합 개발 환경

VScode : IDE가 아니다
---> 텍스트 에디터(그런데 익스텐션을 이용해서 마치 IDE처럼 사용 가능)

IDE 
C# : Visual Studio
python : PyCharm,  쥬피터노트북
Java : IntelliJ

=============================================

URL : "https://" 로 시작하는 웹주소
API : Application Programming Interface(도구), 클라언트가 서버에게 요청하는 규칙
API키는 서버 개발자가 정한다

=============================================

나는 개발자로서 프로그램을 만들거야!!

1. 맨땅에 해딩(처음부터 코딩)

2. 소스코드를 다운받아서 수정하는 방법
---> Framework : 이미 짜여진 소스코드
python : Django /  Flask
Java : Spring Boot / Spring MVC (아시아권에서 많이 쓴다.)
C# : ASP NET Core (주로 미국에서만 쓴다)
JavaScript : Express(미국에서 엄청 많이 쓴다)

======================================

Minnimal GNU for Windows
:  윈도우에서 리눅스에서 쓰는 툴들을 쓸수있게 가볍가 만든 프로젝트

~ : Home directory
cd ~ : 홈 디렉토리로 가기
cd - : 뒤로가기
cd .. : 상위 디렉토리로 가기

==============================================

git 시작
git init

git 종료
1. 숨긴항목 .git 삭제하기
2. rm -rf .git

파일 생성
--->   touch a.txt
파일 삭제
--->   rm a.txt
현재 디렉토리의 파일 목록 확인
--->   ls
폴더 생성
--->   mkdir new_folder
폴더 삭제
--->   rm -r new_folder
작업중인 디렉토리 변경
--->   cd

start 실행
rm 삭제
=============================================

git add .  :  모든 파일 add
git status  :    commit할 준비가 되어있나?

commit 작성자 설정
git config --global user.name "장상호"
git config --global user.email "sangho.jang@mincoding.co.kr"

git commit -m "first_practice"
git log

붙여넣기
shift + insert
git remote add origin https://github.com/wasdl/csh.git
origin 은 원격 저장소의 별칭, 뒤는 url
git remote -v

git push origin +master
+는 강제로 푸시하겠다라는뜻.

touch .-gitignore
gitignore 에 넣으면안되는파일들 정보
*주의
.gitignore
> add 하지 않을 파일명을 작성한다(예 ; api key, 가상환경 등)

.은 전체파일

clone > 새로운환경
> git clone https://github.com/wasdl/csh.git

pull > 이미 로컬작업중, 원격 저장소에 업데이트가 있는경우 갱신
> git pull origin master

변경 사항을 커밋합니다:

git commit -m "Initial commit"

git add. 한 후 
git commit -m "Initial commit"
로 커밋, 그이후 
git push origin master로 푸시가능


